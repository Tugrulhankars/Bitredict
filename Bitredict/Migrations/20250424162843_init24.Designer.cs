// <auto-generated />
using System;
using Bitredict.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bitredict.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20250424162843_init24")]
    partial class init24
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bitredict.Models.Accuracy", b =>
                {
                    b.Property<int>("AccuracyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccuracyId"));

                    b.Property<double>("AccuracyValue")
                        .HasColumnType("float");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.HasKey("AccuracyId");

                    b.ToTable("Accuracies");
                });

            modelBuilder.Entity("Bitredict.Models.HomePageStatistics", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("BankersRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MathcesWon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PredictedToday")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomePageStatistics");
                });

            modelBuilder.Entity("Bitredict.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BestTip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BestTipOdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BetOfTheDayStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DeletedDate")
                        .HasColumnType("date");

                    b.Property<string>("Gg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GgOdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalsOdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("League")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatchDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatchStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odds1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odds2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OddsX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teams")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipOdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trust")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Matchs");
                });

            modelBuilder.Entity("Bitredict.Models.MatchCenterStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Predict")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upcomig")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Won")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MatchCenterStatistics");
                });

            modelBuilder.Entity("Bitredict.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateOnly>("ActiveFinishDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("ActiveStartDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DeletedDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("UpdatedDate")
                        .HasColumnType("date");

                    b.Property<string>("WalletPublicAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
